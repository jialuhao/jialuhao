<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xsi:schemaLocation="
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-2.0.xsd" default-lazy-init="true">






	<!--设定数据源-->

<jee:jndi-lookup id="dataSource" jndi-name="CmsDataSource"
		resource-ref="true" lookup-on-startup="false"
		proxy-interface="javax.sql.DataSource" />



  <!-- 定义 hibernate 的 SessionFactory -->
  <bean id="sessionFactory"
  	class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
  	<property name="dataSource">
  		<ref local="dataSource" />
  	</property>


		<property name="mappingResources">
			<list>
				<!--  Hibernate的map 文件在这里配置了，注意文件的相对位置-->
				<value>hibernate/ApplyJobInfo.hbm.xml</value>
				<value>hibernate/BdCompkind.hbm.xml</value>
				<value>hibernate/BdEducate.hbm.xml</value>
				<value>hibernate/BdFunction.hbm.xml</value>
				<value>hibernate/BdJob.hbm.xml</value>
				<value>hibernate/BdPost.hbm.xml</value>
				<value>hibernate/BdRole.hbm.xml</value>
				<value>hibernate/BdTrade.hbm.xml</value>
				<value>hibernate/BdSalary.hbm.xml</value>
				<value>hibernate/CompInfo.hbm.xml</value>
				<value>hibernate/CompResume.hbm.xml</value>
				<value>hibernate/PersonResume.hbm.xml</value>
				<value>hibernate/PersonResumeB.hbm.xml</value>
				<value>hibernate/PublishJobInfo.hbm.xml</value>
				<value>hibernate/RoleFunction.hbm.xml</value>
				<value>hibernate/UserInfo.hbm.xml</value>
				<value>hibernate/UserRole.hbm.xml</value>
				<value>hibernate/ManaUser.hbm.xml</value>
				<value>hibernate/CompBespeak.hbm.xml</value>
				<value>hibernate/PersonMailInfo.hbm.xml</value>
				<value>hibernate/BdPostRoot.hbm.xml</value>
				<value>hibernate/PersonImage.hbm.xml</value>
				<value>hibernate/CompImage.hbm.xml</value>
				<value>hibernate/PersonEducation.hbm.xml</value>
				<value>hibernate/Servicelog.hbm.xml</value>
				<value>hibernate/Servicepeople.hbm.xml</value>
				<value>hibernate/compservice.hbm.xml</value>
				<value>hibernate/Recommends.hbm.xml</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
			<prop key="hibernate.dialect">org.hibernate.dialect.SQLServerDialect</prop>
			<prop key="hibernate.show_sql">true</prop>
  			<prop key="hibernate.format_sql">true</prop>
  			<prop key="hibernate.hbm2ddl.auto">true</prop>
			<prop key="hibernate.jdbc.batch_size">100</prop>
			<prop key="hibernate.jdbc.fetch_size">50</prop>
			</props>
		</property>
		<property name="lobHandler">
			<ref local="DefaultLobHandler" />
		</property>
	</bean>

	<!--对于大字段的处理-->
	<bean id="DefaultLobHandler"
		class="org.springframework.jdbc.support.lob.DefaultLobHandler"
		lazy-init="true">
	</bean>

	<!-- 事务管理器,业务层的事务管理由该bean管理-->

	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory">
			<ref local="sessionFactory" />
		</property>
	</bean>

	<!-- 事务处理环境（代理）配置，为业务处理LoginService定义一个事务处理*****-->
	<!-- 
		<bean id="userDAOProxy" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean"
		abstract="true">
		<property name="transactionManager">
		<ref bean="transactionManager" />
		</property>
		<property name="transactionAttributes">
		<props>
		<prop key="save*">PROPAGATION_REQUIRED</prop>
		<prop key="get*">PROPAGATION_REQUIRED,readOnly</prop>
		<prop key="find*">PROPAGATION_REQUIRED,readOnly</prop>
		</props>
		</property>
		<property name="proxyTargetClass">  
		<value>true</value>  
		</property> 
		</bean>
	-->

	<!-- 配置事务拦截器 -->
	<bean id="transactionInterceptor"
		class="org.springframework.transaction.interceptor.TransactionInterceptor">
		<property name="transactionManager" ref="transactionManager" />
		<property name="transactionAttributes">
			<props>
				<prop key="save*">PROPAGATION_REQUIRED</prop>
				<prop key="del*">PROPAGATION_REQUIRED</prop>
				<prop key="update*">PROPAGATION_REQUIRED</prop>
				<prop key="query*">PROPAGATION_REQUIRED,readOnly</prop>
				<prop key="find*">PROPAGATION_REQUIRED,readOnly</prop>
				<prop key="pagination*">PROPAGATION_REQUIRED,readOnly</prop>
			</props>
		</property>
	</bean>

	<!-- 定义beannameautoproxycreate 生成事务代理-->
	<bean
		class="org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator">
		<!-- 指定对哪些bean name的bean 采用自动生成业务代理 -->
		<property name="beanNames">
			<!-- 下面是所有需要自动创建事务代理的bean -->
			<list>
				<value>inviteManager</value>
			</list>
		</property>
		<property name="interceptorNames">
			<list>
				<value>transactionInterceptor</value>
			</list>
		</property>
	</bean>

	<!-- 业务逻辑处理Bean定义 -->
	<bean id="inviteManager" class="service.InviteManagerImpl">

		<property name="applyJobInfoDao">
			<ref bean="applyJobInfoDAO" />
		</property>
		<property name="userInfoDao">
			<ref bean="userInfoDAO" />
		</property>
		<property name="compInfoDao">
			<ref bean="compInfoDAO" />
		</property>
		<property name="compResumeDao">
			<ref bean="compResumeDAO" />
		</property>
		<property name="publishJobDao">
			<ref bean="publishJobDAO" />
		</property>
		<property name="personResumeDao">
			<ref bean="personResumeDAO" />
		</property>
		<property name="personResumeBDao">
			<ref bean="personResumeBDAO" />
		</property>
		<property name="bdTradeDao">
			<ref bean="bdTradeDAO" />
		</property>
		<property name="bdCompKindDao">
			<ref bean="bdCompKindDAO" />
		</property>
		<property name="bdEducateDao">
			<ref bean="bdEducateDAO" />
		</property>
		<property name="bdJobDao">
			<ref bean="bdJobDAO" />
		</property>
		<property name="bdPostDao">
			<ref bean="bdPostDAO" />
		</property>
		<property name="compBespeakDao">
			<ref bean="compBespeakDAO" />
		</property>
		<property name="manaUserDao">
			<ref bean="manaUserDAO" />
		</property>
		<property name="personMailInfoDao">
			<ref bean="personMailInfoDAO" />
		</property>
		<property name="bdPostRootDao">
			<ref bean="bdPostRootDAO"/>
		</property>
		<property name="personImageDao">
			<ref bean="personImageDAO"/>
		</property>
		<property name="compImageDao">
			<ref bean="compImageDAO"/>
		</property>
		<property name="personEducationDAO">
			<ref bean="personEducationDAO"/>
		</property>
		<!-- commoncode -->
		<property name="commonCodeDao">
			<ref bean="CommonCodeDAO"/>
		</property>
		<!-- areacode -->
		<property name="areaCodeDao">
			<ref bean="AreaCodeDAO"/>
		</property>
		<property name="bdSalaryDao">
			<ref bean="bdSalaryDAO" />
		</property>
		<property name="servicelogDao">
			<ref bean="servicelogDAO" />
		</property>
		<property name="servicepeopleDao">
			<ref bean="servicepeopleDAO" />
		</property>
		<property name="compserviceDao">
			<ref bean="compserviceDAO" />
		</property>
		<property name="recommendsssDao">
			<ref bean="recommendsDAO" />
		</property>
	</bean>


	<!--
		<bean id="InviteService" parent="userDAOProxy"> 
		<property name="target">
		<ref local="inviteManager"/>
		</property>
		</bean>
		
		
		<bean id="UserService" parent="userDAOProxy">  
		<property name="target">  
		<ref local="loginService" />  
		</property>  
		</bean> 
	-->
</beans>
